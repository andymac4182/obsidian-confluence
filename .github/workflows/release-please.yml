on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  id-token: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - id: release-please
        uses: google-github-actions/release-please-action@v3
        with:
          command: manifest
          token: ${{ secrets.RELEASE_PLEASE_PAT }}
      
      - name: Use Node.js
        if: ${{ steps.release-please.outputs.release_created }}
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: 'https://registry.npmjs.org'

      - name: Latest NPM
        if: ${{ steps.release-please.outputs.release_created }}
        run: npm install -g npm@latest

      - name: Upload release assets
        if: ${{ steps.release-please.outputs.release_created }}
        run: |
          mkdir -p packages/obsidian/dist/
          cp README.md packages/obsidian/dist/
          cp manifest.json packages/obsidian/dist/
          
          npm ci
          npm run lint -ws --if-present
          npm run prettier-check -ws --if-present
          npm run build -ws --if-present

          ORIGINAL_TAG=${{ steps.release-please.outputs.tag_name }}
          IFS='-v' read -ra PARTS <<< "$ORIGINAL_TAG"
          TAG="${PARTS[-1]}"

          cd packages/obsidian
          zip -r ${{ github.event.repository.name }}-$TAG.zip dist

          FILES=$(echo dist/*)
          gh release create $TAG -t $TAG --generate-notes --latest --target ${{ steps.release-please.outputs.sha }} ./dist/*
          echo $FILES
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to NPM
        if: ${{ steps.release-please.outputs.release_created }}
        run: |
          npm publish -w @markdown-confluence/lib
          npm publish -w @markdown-confluence/mermaid-electron-renderer
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
