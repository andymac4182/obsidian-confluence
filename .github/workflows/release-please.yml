on:
  push:
    branches:
      - main

permissions:
  contents: read

name: release-please

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "markdown-confluence/publish"

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      CurrentVersion: ${{ steps.releaseassets.outputs.CurrentVersion }}
    permissions:
      contents: write
      pull-requests: write
      id-token: write
      packages: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      - id: release-please
        uses: google-github-actions/release-please-action@51ee8ae2605bd5ce1cfdcc5938684908f1cd9f69 # v3.7.9
        with:
          command: manifest
          token: ${{ secrets.RELEASE_PLEASE_PAT }}
      
      - name: Use Node.js
        if: ${{ steps.release-please.outputs.release_created }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: "16.x"
          registry-url: 'https://registry.npmjs.org'

      - name: Latest NPM
        if: ${{ steps.release-please.outputs.release_created }}
        run: npm install -g npm@9.6.5

      - name: Checkout source repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          repository: markdown-confluence/obsidian-integration
          token: ${{ secrets.RELEASE_PLEASE_PAT }}
          path: ./.release-repo

      - name: Upload release assets
        id: releaseassets
        if: ${{ steps.release-please.outputs.release_created }}
        run: ./.build/upload-release-assets.sh ${{ steps.release-please.outputs.tag_name }} ${{ steps.release-please.outputs.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLEASE_PAT }}

      - name: Publish to NPM
        if: ${{ steps.release-please.outputs.release_created }}
        run: |
          npm publish -w @markdown-confluence/lib
          npm publish -w @markdown-confluence/mermaid-electron-renderer
          npm publish -w @markdown-confluence/mermaid-puppeteer-renderer
          npm publish -w @markdown-confluence/cli
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: Log in to the Container registry
        if: ${{ steps.release-please.outputs.release_created }}
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.RELEASE_PLEASE_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        if: ${{ steps.release-please.outputs.release_created }}
        id: meta
        uses: docker/metadata-action@2c0bd771b40637d97bf205cbccdd294a32112176
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.release-please.outputs.major }}
            type=raw,value=${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }}
            type=raw,pattern={{version}},value=v${{ steps.releaseassets.outputs.CurrentVersion }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        if: ${{ steps.release-please.outputs.release_created }}
        uses: docker/build-push-action@44ea916f6c540f9302d50c2b1e5a8dc071f15cdf
        with:
          context: packages/cli
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
